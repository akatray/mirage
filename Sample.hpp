// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Pragma.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#pragma once

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Imports.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <fx/Types.hpp>
#include <iostream>

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Mirage.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace mir
{
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Expand namespaces.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	using namespace fx;

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// Sample container.
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	template<class T, u64 WIDTH, u64 HEIGHT, u64 ALIGNMENT = 32> struct Sample
	{
		// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		// Members.
		// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		alignas(ALIGNMENT) T Data[WIDTH * HEIGHT];

		// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		// Functions.
		// ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		Sample ( void ) : Data{} {}

		auto store ( std::ostream& _Stream ) const -> void
		{
			_Stream.write(reinterpret_cast<const char*>(this->Data), WIDTH * HEIGHT * sizeof(T));
		}

		auto load ( std::istream& _Stream ) -> void
		{
			_Stream.read(reinterpret_cast<char*>(this->Data), WIDTH * HEIGHT * sizeof(T));
		}
	};
}
