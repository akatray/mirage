// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Pragma.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#pragma once

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Imports.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <fx/Types.hpp>
#include <string>

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Expand namespaces.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
using namespace fx;

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Mirage: Configurations.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
namespace mir::cfg
{
	using PRECISION = fx::r32;
	
	constexpr auto S_WIDTH = fx::uMAX(48*2);
	constexpr auto S_HEIGHT = fx::uMAX(64*2);
	constexpr auto S_SIZE = S_WIDTH * S_HEIGHT;
	constexpr auto S_LATENT = fx::uMAX(256);
	
	constexpr auto S_STORAGE_WIDTH = fx::uMAX(256);
	constexpr auto S_STORAGE_HEIGHT = fx::uMAX(320);
	constexpr auto S_STORAGE_ASPECT = fx::r64(S_STORAGE_WIDTH) / S_STORAGE_HEIGHT;
	
	constexpr auto BATCH_SIZE = 3*64;

	constexpr auto R_INIT = fx::r64(0.0001);
	constexpr auto R_FLOOR = fx::r64(0.000000000000000000000000001);
	constexpr auto R_DECAY = fx::r64(1.00);

	constexpr auto TM_STATUS = fx::u64(2000);
	constexpr auto TM_PREVIEWS = fx::u64(20000);
	constexpr auto TM_STORE = fx::u64(60000);

	constexpr auto UI_PREVIEWS_COUNT = fx::uMAX(8);
	constexpr auto UI_MARGIN = int(8);
	constexpr auto UI_MARGINS = UI_MARGIN * 2;

	auto P_WORKSPACE = std::string("./workspace/");
}
